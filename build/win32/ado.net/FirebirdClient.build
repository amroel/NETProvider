<?xml version="1.0" encoding="utf-8" ?>
<project name="FirebirdSql.Data.FirebirdClient" default="build-all">
  
  <!-- Project properties -->
  <property name="project.name" value="FirebirdbClient" />
  <property name="project.version" value="2.0" />
  
  <!-- nightly / dev / alpha / beta# / rc# / release -->
  <property name="project.release.type" value="release" overwrite="false" />
  
  <!-- Default Configuration -->
  <property name="project.config" value="release" />
  <property name="build.debug" value="false" />
  <property name="build.defines" value="" />

  <!-- Platform specific properties. These are the defaults -->
  <property name="current.build.defines" value="${build.defines}" />
  <property name="current.build.task" value="build-provider" />
  <property name="current.build.help.task" value="build-help" />

  <!-- Paths properties -->
  <property name="source.dir" value="../../../source" />

  <!-- Check for Html Help Compiler -->
  <target name="check-htmlhelp-compiler" description="Checks existance of the HTML help compiler">
    <if test="${property::exists('htmlhelp.compiler')}">
      <readregistry 
        property="htmlhelp.workshop.installroot" 
        key="SOFTWARE\Microsoft\HTML Help Workshop\InstallDir"
        hive="CurrentUser" 
        failonerror="false" 
      />

      <if test="${property::exists('htmlhelp.workshop.installroot')}">
        <property 
            name="htmlhelp.compiler" 
            value="${htmlhelp.workshop.installroot}\hhc.exe" 
            readonly="false" 
        />
      </if>
    </if>

    <if test="${not property::exists('htmlhelp.compiler')}">
      <sysinfo />
      <property 
        name="htmlhelp.compiler" 
        value="${sys.os.folder.programfiles}\HTML Help Workshop\hhc.exe"
        readonly="false" 
      />
    </if>
  </target>

  <!-- Check for NUnit -->
  <target 
        name="check-nunit-framework" 
        depends="check-htmlhelp-compiler" 
        description="Checks existance of NUnit2">

    <if test="${not property::exists('nunit.framework.dll')}">
      <sysinfo />
      <property 
        name="nunit.framework.dll"
        value="${sys.os.folder.programfiles}\NUnit-Net-2.0 2.2.9\bin\nunit.framework.dll"
        readonly="false"
			/>
    </if>
  </target>

  <!-- Target for check build configuration -->
  <target 
        name="check-build-config" 
        depends="check-nunit-framework" 
        description="Pre-build configuration checks">

    <!-- Copy snk file -->
    <copy 
      file="${source.dir}/FirebirdSql/FirebirdSql.Data.FirebirdClient.snk" 
      todir="." 
    />
    <copy 
      file="${source.dir}/FirebirdSql/FirebirdSql.Web.Providers.snk" 
      todir="." 
    />
  </target>

  <!-- named project configurations (used by self-test and self-doc tasks) -->
  <target name="debug" description="Perform a 'debug' build">
    <property name="project.config" value="debug" />
    <property name="build.debug" value="true" />
    <property 
      name="build.dir" 
      value="${nant.settings.currentframework}/bin/${project.config}" 
    />
  </target>

  <target name="release" description="Perform a 'release' build">
    <property name="project.config" value="release" />
    <property name="build.debug" value="false" />
    <property 
      name="build.dir" 
      value="${nant.settings.currentframework}/bin/${project.config}" 
    />
  </target>

  <!-- Build target for all existing platforms -->
  <target 
        name="build-all" 
        depends="check-build-config"
        description="Builds the provider for all available framework versions">

    <if test="${framework::exists('net-2.0')}">
      <call target="set-net-2.0-framework-configuration"/>
      <call target="build-provider" />
      <call target="build-tests" failonerror="true" />
      <call target="build-web-providers" />
    </if>
    <if test="${framework::exists('mono-2.0')}">
      <call target="set-mono-2.0-framework-configuration"/>
      <call target="build-provider" />
      <call target="build-tests" failonerror="true" />
    </if>
  </target>

  <target 
        name="set-net-2.0-framework-configuration" 
        description="Configures the build for MS.NET Framework 2.0">

    <property 
      name="nant.settings.currentframework" 
      value="net-2.0" 
    />
    <property 
      name="current.build.defines" 
      value="${build.defines}NET,NET_2_0" 
      dynamic="true" 
    />
    <property 
      name="link.sdkdoc.version" 
      value="SDK_v2_0" 
    />
    <property 
      name="link.sdkdoc.web" 
      value="true" 
    />
  </target>

  <target 
      name="set-mono-2.0-framework-configuration" 
      description="Configures the build for Mono Platform 2.0">

    <property 
      name="nant.settings.currentframework" 
      value="mono-2.0" 
    />
    <property 
      name="current.build.defines" 
      value="${build.defines}MONO,MONO_2_0" 
      dynamic="true" 
    />
    <property 
      name="link.sdkdoc.version" 
      value="SDK_v2_0" 
    />
    <property 
      name="link.sdkdoc.web" 
      value="false" 
    />
  </target>

  <!-- Build target for all existing platforms -->
  <target 
        name="test" 
        description="Builds the provider for all available framework versions and runs the nunit test suite">

    <property name="run.tests" value="true" />
    <call target="build-all" />
  </target>

  <target name="build-provider">
    <echo message="Using '${framework::get-target-framework()}' framework on '${platform::get-name()}' platform." />

    <call target="${project.config}" />

    <!-- Clean actual build directory -->
    <delete dir="${build.dir}" failonerror="false" />

    <!-- Create actual build directory -->
    <mkdir dir="${build.dir}" />

    <!--doc="${build.dir}/${project::get-name()}.xml" -->
    <csc  target="library" 
          output="${build.dir}/${project::get-name()}.dll"
          debug="${build.debug}" 
          define="${current.build.defines}">

      <sources basedir="${source.dir}">
        <include name="FirebirdSql/**/*.cs"/>
        <exclude name="FirebirdSql/Web/**/*.cs"/>
        <exclude name="FirebirdSql/Data/UnitTests/**/*.cs"/>
      </sources>

      <references>
        <include name="System.dll"/>
        <include name="System.Data.dll"/>
        <include name="System.Drawing.dll"/>
        <include name="System.XML.dll"/>
        <include name="System.Windows.Forms.dll"/>
      </references>

      <arg value="/resource:${source.dir}/FirebirdSql/Resources/isc_error_msg.resources,FirebirdSql.Resources.isc_error_msg.resources"/>
      <arg value="/resource:${source.dir}/FirebirdSql/Data/Schema/FbMetaData.xml,FirebirdSql.Data.Schema.FbMetaData.xml"/>
      <arg value="/optimize+" />
      <arg value="/keyfile:FirebirdSql.Data.FirebirdClient.snk" />
    </csc>
  </target>

  <target name="build-web-providers">
    <echo message="Using '${framework::get-target-framework()}' framework on '${platform::get-name()}' platform." />

    <call target="${project.config}" />

    <!-- Copy SQL Scripts -->
    <copy todir="${build.dir}">
      <fileset basedir="${source.dir}/FirebirdSql/Web/Providers/sql_scripts/">
        <include name="*.sql" />
      </fileset>
    </copy>

    <!--doc="${build.dir}/${project::get-name()}.xml" -->
    <csc target="library" 
         output="${build.dir}/FirebirdSql.Web.Providers.dll"
         debug="${build.debug}" 
         define="${current.build.defines}">

      <sources basedir="${source.dir}">
        <include name="FirebirdSql/Web/Providers/**/*.cs"/>
      </sources>

      <references>
        <include name="System.dll"/>
        <include name="System.Configuration.dll"/>
        <include name="System.Data.dll"/>
        <include name="System.XML.dll"/>
        <include name="System.Web.dll"/>
        <include name="${build.dir}/FirebirdSql.Data.FirebirdClient.dll" />
      </references>

      <arg value="/optimize+" />
      <arg value="/keyfile:FirebirdSql.Web.Providers.snk" />
    </csc>
  </target>

  <target 
      name="build-tests" 
      description="Builds the NUnit test suite assembly">

    <!-- Set build directory -->
    <property 
        name="build.dir" 
        value="${nant.settings.currentframework}/bin/${project.config}" 
    />

    <!-- Copy config file to build dir -->
    <copy 
      file="${source.dir}/FirebirdSql/Data/UnitTests/App.config" 
      tofile="${build.dir}/${project::get-name()}.UnitTests.dll.config" 
    />

    <copy 
      file="${nunit.framework.dll}" 
      todir="${build.dir}"
    />

    <!-- compile FirebirdSql.Data.Firebird.UnitTest -->
    <csc target="library" 
         output="${build.dir}/${project::get-name()}.UnitTests.dll" 
         debug="${build.debug}" 
         define="${current.build.defines}">

      <sources basedir="${source.dir}">
        <include name="FirebirdSql/Data/UnitTests/**/*.cs"/>
      </sources>

      <references>
        <include name="System.dll" />
        <include name="System.Configuration.dll" />
        <include name="System.Data.dll" />
        <include name="System.XML.dll" />
		<include name="System.Transactions.dll" />
        <include name="${nunit.framework.dll}"/>
        <include name="${build.dir}/FirebirdSql.Data.FirebirdClient.dll" />
      </references>

      <arg value="/optimize+" />
    </csc>
  </target>

  <target name="run-tests" description="Runs the nunit tests">
    <!-- Set build directory -->
    <property 
      name="build.dir" 
      value="${nant.settings.currentframework}/bin/${project.config}" 
    />

    <nunit2>
      <formatter 
				type="Xml" 
				usefile="true" 
				extension=".xml" 
				outputdir="${build.dir}" 
			/>
      <test 
        assemblyname="${build.dir}/${project::get-name()}.UnitTest.dll" 
        appconfig="${build.dir}/${project::get-name()}.UnitTest.dll.config" 
      />
    </nunit2>
  </target>

  <!-- SDK Build targets -->
  <target name="build-sdk" 
          depends="build-all" 
          description="Builds the SDK help file">

    <!-- Check for Html Help compiler -->
    <call target="check-htmlhelp-compiler" />

    <!-- Framework version -->
    <property name="nant.settings.currentframework" value="net-1.1" />

    <!-- Set build directory -->
    <property name="build.dir" value="${nant.settings.currentframework}/bin/${project.config}" />

    <!-- Set sdk build directory -->
    <property name="build.sdk.dir" value="${build.dir}/sdk" />

    <!-- Create html-help build directory -->
    <mkdir dir="${build.sdk.dir}" failonerror="false" />

    <ndoc failonerror="false">
      <assemblies basedir="${build.dir}">
        <include name="${project::get-name()}.dll"/>
      </assemblies>

      <documenters>
        <documenter name="MSDN">
          <property name="OutputDirectory" value="${build.sdk.dir}" />
          <property name="OutputTarget" value="HtmlHelp" />
          <property name="SdkDocVersion" value="${link.sdkdoc.version}" />
          <property name="SdkLinksOnWeb" value="${link.sdkdoc.web}" />
          <property name="HtmlHelpName" value="FirebirdNETProviderSDK" />
          <property name="IncludeFavorites" value="False" />
          <property name="Title" value="Firebird ADO.NET Provider SDK Documentation - v${project.version}" />
          <property name="SplitTOCs" value="False" />
          <property name="DefaulTOC" value="" />
          <property name="ShowVisualBasic" value="True" />
          <property name="Preliminary" value="${not(project.release.type=='release')}" />
          <property name="ShowMissingSummaries" value="${build.debug}" />
          <property name="ShowMissingRemarks" value="${build.debug}" />
          <property name="ShowMissingParams" value="${build.debug}" />
          <property name="ShowMissingReturns" value="${build.debug}" />
          <property name="ShowMissingValues" value="${build.debug}" />
          <property name="DocumentAttributes" value="True" />
          <property name="ShowTypeIdInAttributes" value="False" />
          <property name="DocumentInternals" value="False" />
          <property name="DocumentPrivates" value="False" />
          <property name="DocumentProtected" value="True" />
          <property name="DocumentEmptyNamespaces" value="False" />
          <property name="IncludeAssemblyVersion" value="False" />
          <property name="CopyrightText" value="Copyright (C) 2002-${datetime::get-year(datetime::now())} Carlos Guzman Alvarez" />
          <property name="CopyrightHref" value="http://www.firebirdsql.org" />
          <property name="EditorBrowsableFilter" value="Off" />
        </documenter>
      </documenters>
    </ndoc>

    <!-- Rename CHM file -->
    <copy 
      file="${build.sdk.dir}/FirebirdNETProviderSDK.chm" 
      tofile="${build.dir}/FirebirdNETProviderSDK.chm" 
    />

    <!-- Clean actual sdk build directory -->
    <delete 
      dir="${build.sdk.dir}" 
      failonerror="false" 
    />
  </target>
</project>
