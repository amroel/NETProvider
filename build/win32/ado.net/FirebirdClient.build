<?xml version="1.0" encoding="utf-8" ?>
<project name="FirebirdSql.Data.FirebirdClient" default="build-all">

  <!-- Project properties -->
  <property name="project.name" value="FirebirdbClient" />
  <property name="project.version" value="2.0" />

  <!-- nightly / dev / alpha / beta# / rc# / release -->
  <property name="project.release.type" value="release" overwrite="false" />

  <!-- Default Configuration -->
  <property name="project.config" value="release" />
  <property name="build.debug" value="false" />
  <property name="build.defines" value="" />

  <!-- Platform specific properties. These are the defaults -->
  <property name="current.build.defines" value="${build.defines}" />
  <property name="current.build.task" value="build-provider" />

  <!-- Paths properties -->
  <property name="source.dir" value="../../../source" />

  <!-- Check for NUnit -->
  <target
        name="check-nunit-framework"
        description="Checks existance of NUnit2">

    <if test="${not property::exists('nunit.framework.dll')}">
      <property
        name="nunit.framework.dll"
        value="${source.dir}\..\lib\nunit.framework.dll"
        readonly="false"
	  />
    </if>
  </target>

  <!-- Target for check build configuration -->
  <target
        name="check-build-config"
        depends="check-nunit-framework"
        description="Pre-build configuration checks">

    <!-- Copy snk file -->
    <copy
      file="${source.dir}/FirebirdSql/Data/Properties/FirebirdSql.Data.FirebirdClient.snk"
      todir="."
    />
  </target>

  <!-- named project configurations (used by self-test and self-doc tasks) -->
  <target name="debug" description="Perform a 'debug' build">
    <property name="project.config" value="debug" />
    <property name="build.debug" value="true" />
    <property
      name="build.dir"
      value="${nant.settings.currentframework}/bin/${project.config}"
    />
  </target>

  <target name="release" description="Perform a 'release' build">
    <property name="project.config" value="release" />
    <property name="build.debug" value="false" />
    <property
      name="build.dir"
      value="${nant.settings.currentframework}/bin/${project.config}"
    />
  </target>

  <!-- Build target for all existing platforms -->
  <target
        name="build-all"
        depends="check-build-config"
        description="Builds the provider for all available framework versions">

    <if test="${framework::exists('net-2.0')}">
      <call target="set-net-2.0-framework-configuration"/>
      <call target="build-provider" />
      <call target="build-tests" failonerror="true" />
    </if>
    <if test="${framework::exists('mono-2.0')}">
      <call target="set-mono-2.0-framework-configuration"/>
      <call target="build-provider" />
      <call target="build-tests" failonerror="true" />
    </if>
  </target>

  <target
        name="set-net-2.0-framework-configuration"
        description="Configures the build for MS.NET Framework 2.0">

    <property
      name="nant.settings.currentframework"
      value="net-2.0"
    />
    <property
      name="current.build.defines"
      value="${build.defines}NET,NET_2_0"
      dynamic="true"
    />
  </target>

  <target
      name="set-mono-2.0-framework-configuration"
      description="Configures the build for Mono Platform 2.0">

    <property
      name="nant.settings.currentframework"
      value="mono-2.0"
    />
    <property
      name="current.build.defines"
      value="${build.defines}MONO,MONO_2_0"
      dynamic="true"
    />
  </target>

  <!-- Build target for all existing platforms -->
  <target
        name="test"
        description="Builds the provider for all available framework versions and runs the nunit test suite">

    <property name="run.tests" value="true" />
    <call target="build-all" />
  </target>

  <target name="build-provider">
    <echo message="Using '${framework::get-target-framework()}' framework on '${platform::get-name()}' platform." />

    <call target="${project.config}" />

    <!-- Clean actual build directory -->
    <delete dir="${build.dir}" failonerror="false" />

    <!-- Create actual build directory -->
    <mkdir dir="${build.dir}" />

    <!--doc="${build.dir}/${project::get-name()}.xml" -->
    <csc  target="library"
          output="${build.dir}/${project::get-name()}.dll"
          debug="${build.debug}"
          define="${current.build.defines}">

      <sources basedir="${source.dir}">
        <include name="FirebirdSql/Data/**/*.cs"/>
        <exclude name="FirebirdSql/Web/**/*.cs"/>
        <exclude name="FirebirdSql/Data/UnitTests/**/*.cs"/>
      </sources>

      <references>
        <include name="System.dll"/>
        <include name="System.Data.dll"/>
        <include name="System.Drawing.dll"/>
        <include name="System.XML.dll"/>
        <include name="System.Windows.Forms.dll"/>
      </references>

      <arg value="/resource:${source.dir}/FirebirdSql/Data/Resources/isc_error_msg.resources,FirebirdSql.Resources.isc_error_msg.resources"/>
      <arg value="/resource:${source.dir}/FirebirdSql/Data/Schema/FbMetaData.xml,FirebirdSql.Data.Schema.FbMetaData.xml"/>
      <arg value="/keyfile:FirebirdSql.Data.FirebirdClient.snk" />
    </csc>
  </target>

  <target
      name="build-tests"
      description="Builds the NUnit test suite assembly">

    <!-- Set build directory -->
    <property
        name="build.dir"
        value="${nant.settings.currentframework}/bin/${project.config}"
    />

    <!-- Copy config file to build dir -->
    <copy
      file="${source.dir}/FirebirdSql/Data/UnitTests/App.config"
      tofile="${build.dir}/${project::get-name()}.UnitTests.dll.config"
    />

    <!-- compile FirebirdSql.Data.Firebird.UnitTest -->
    <csc target="library"
         output="${build.dir}/${project::get-name()}.UnitTests.dll"
         debug="${build.debug}"
         define="${current.build.defines}">

      <sources basedir="${source.dir}">
        <include name="FirebirdSql/Data/UnitTests/**/*.cs"/>
      </sources>

      <references>
        <include name="System.dll" />
        <include name="System.Configuration.dll" />
        <include name="System.Data.dll" />
        <include name="System.XML.dll" />
        <include name="System.Transactions.dll" />
        <include name="${nunit.framework.dll}"/>
        <include name="${build.dir}/FirebirdSql.Data.FirebirdClient.dll" />
      </references>
    </csc>
  </target>

  <target name="run-tests" description="Runs the nunit tests">
    <!-- Set build directory -->
    <property
      name="build.dir"
      value="${nant.settings.currentframework}/bin/${project.config}"
    />

    <nunit2>
      <formatter
				type="Xml"
				usefile="true"
				extension=".xml"
				outputdir="${build.dir}"
			/>
      <test
        assemblyname="${build.dir}/${project::get-name()}.UnitTest.dll"
        appconfig="${build.dir}/${project::get-name()}.UnitTest.dll.config"
      />
    </nunit2>
  </target>
</project>
