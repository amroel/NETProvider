<!--
//
// Firebird .Net Data Provider - Firebird managed data provider for .Net and Mono
//
// Author : Carlos Guzman Alvarez <carlosga@telefonica.net>
//
// Distributable under LGPL license.
// You may obtain a copy of the License at http://www.gnu.org/copyleft/lesser.html
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// LGPL License for more details.
//
// This file was created by members of the firebird development team.
// All individual contributions remain the Copyright (C) of those
// individuals.  Contributors to this file are either listed here or
// can be obtained from a CVS history command.
//
// All rights reserved.
//
// For more information please see http://www.firebirdsql.org
//
-->

<doc>
<member name="T:FbException">
    <summary>
    The exception that is thrown when Firebird Server returns a warning or error. 
    This class cannot be inherited.
    </summary>
    <remarks>
	<para>
	This class is created whenever the Firebird Server .NET Data Provider
	encounters an error generated from the server. (Client side errors are
	thrown as standard URT exceptions.) <b>FbException</b> always contains at 
	least one instance of <see cref="FbError">FbError</see>.
	</para>
    </remarks>
    <example>
	The following example generates a <b>FbException</b> due to a missing server, 
	and then displays the exception.
    <code>
public void ThrowFbException() 
{
    string		 myConnString = "Database=C:\\PROGRAM FILES\\FIREBIRD\\EXAMPLES\\EMPLOYEE.GDB;User=SYSDBA;Password=masterkey;Dialect=3;Server=localhost";    
    FbConnection myConnection  = new FbConnection(myConnString);
    
    try 
    {
       myConnection.Open();
    }
    catch (FbException e) 
    {
       FbErrorCollection myErrors = e.Errors;
       
       Console.WriteLine("Class: {1}", e.Class);
       Console.WriteLine("Error #{1}: {2} on line {3}.", e.Number, e.Message, e.LineNumber);
       Console.WriteLine("Error reported by {1} while connected to {2}", e.Source, e.Server);
       Console.WriteLine("Neither record was written to database.");
       Console.WriteLine("Errors collection contains:");

       for (int i=0; i &lt; myErrors.Errors.Count; i++) 
       {
           Console.WriteLine("Class: {1}", myErrors[i].Class);
           Console.WriteLine("Error #{1}: {2} on line {3}.", myErrors[i].Number, myErrors[i].Message, myErrors[i].LineNumber);
           Console.WriteLine("Error reported by {1} while connected to {2}", myErrors[i].Source, myErrors[i].Server);
       }
    }
 }
     </code>
    </example>    
</member>
<member name="M:#ctor">
    <summary>
    Initializes a new instance of the <see cref="FbException">FbException</see> class.
    </summary>
</member>
<member name="M:#ctor(System.String)">
    <summary>
    Initializes a new instance of the <see cref="FbException">FbException</see> class.
    </summary>
    <param name="message">Error message</param>
</member>
<member name="M:#ctor(System.String,FirebirdSql.Data.INGDS.GDSException)">
    <summary>
    Initializes a new instance of the <see cref="FbException">FbException</see> class.
    </summary>
    <param name="message">Error message</param>
    <param name="ex">A Exception object</param>
</member>
<member name="P:Message">
    <summary>
    Gets the text describing the error.
    </summary>
</member>
<member name="P:Errors">
    <summary>
    Gets a collection of one or more <see cref="FbError">FbError</see> objects that give detailed 
    information about exceptions generated by the Firebird .NET Data Provider.
    </summary>
</member>
<member name="P:ErrorCode">
	<summary>		
	Gets a value representing the Firebird error code
	</summary>
</member>
</doc>
