<!--
//
// Firebird .Net Data Provider - Firebird managed data provider for .Net and Mono
//
// Author : Carlos Guzman Alvarez <carlosga@telefonica.net>
//
// Distributable under LGPL license.
// You may obtain a copy of the License at http://www.gnu.org/copyleft/lesser.html
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// LGPL License for more details.
//
// This file was created by members of the firebird development team.
// All individual contributions remain the Copyright (C) of those
// individuals.  Contributors to this file are either listed here or
// can be obtained from a CVS history command.
//
// All rights reserved.
//
// For more information please see http://www.firebirdsql.org
//
-->

<doc>
<member name="T:FbResultset">
    <summary>
    Provides a means of reading a forward-only stream of rows from a Firebird
    database. This class cannot be inherited.
    </summary>
</member>
<member name="M:#ctor(FirebirdSql.Data.Firebird.FbCommand,FirebirdSql.Data.Firebird.FbConnection)">
    <summary>
    Initializes a new instance of the FbResultSet class.
    </summary>
    <param name="command">A FbCommand object</param>
    <param name="connection">A FbConnection object</param>
</member>
<member name="M:Fetch">
    <summary>
    Advances the FbResultset to the next record.
    </summary>
    <returns>true if there are more rows; otherwise, false.</returns>
</member>
<member name="M:GetColumnName(System.Int32)">
    <summary>
    Gets the column name of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The alias name of the column</returns>
</member>
<member name="M:GetBaseTableName(System.Int32)">
    <summary>
    Gets the table name of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The table name of the column</returns>
</member>
<member name="M:GetBaseColumnName(System.Int32)">
    <summary>
    Gets the base column name of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The name of the column</returns>
</member>
<member name="M:GetSize(System.Int32)">
    <summary>
    Gets the size of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The size of the column</returns>
</member>
<member name="M:GetScale(System.Int32)">
    <summary>
    Gets the name of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The scale of the column</returns>
</member>
<member name="M:GetProviderType(System.Int32)">
    <summary>
    Gets the firebird type of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The firebird type of the column</returns>
</member>
<member name="M:GetSubType(System.Int32)">
    <summary>
    Gets the firebird sub-type of the specified column.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The firebird sub-type of the column</returns>
</member>
<member name="M:GetDataTypeName(System.Int32)">
    <summary>
    Gets the name of the source data type.		
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The name of the back-end Data Type</returns>
</member>
<member name="M:GetFieldType(System.Int32)">
    <summary>
    Gets the Type that is the data type of the object.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The Type that is the data type of the object.</returns>
</member>
<member name="M:GetValue(System.Int32)">
    <summary>
    Gets the value of the column at the specified ordinal in its native format.
    </summary>
    <param name="i">The zero-based column ordinal.</param>
    <returns>The value to return.</returns>
    <remarks>
    This method returns DBNull for null database columns.
    </remarks>
</member>
<member name="M:GetValues(System.Object[])">
    <summary>
    Gets all the attribute columns in the current row.
    </summary>
    <param name="values">An array of type Object into which to copy the attribute columns.</param>
    <returns>The number of instances of Object in the array.</returns>
</member>
<member name="M:GetOrdinal(System.String)">
    <summary>
    Gets the column ordinal, given the name of the column.
    </summary>
    <param name="name">The name of teh column</param>
    <returns>The zero-based column ordinal.</returns>
</member>
<member name="M:GetBoolean(System.Int32)">
    <summary>
    Gets the value of the specified column as a Boolean.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>A Boolean that is the value of the column.</returns>
    <remarks>Call IsDBNull to check for null values before calling this method.</remarks>
    <exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
</member>
<member name="M:GetByte(System.Int32)">
    <summary>
    Gets the value of the specified column as a byte.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a byte.</returns>
    <exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
</member>
<member name="M:GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <summary>
    Reads a stream of bytes from the specified column offset into the buffer as 
    an array, starting at the given buffer offset.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <param name="dataIndex">The index within the field where the read operation is to begin.</param>
    <param name="buffer">The buffer into which to read the stream of bytes.</param>
    <param name="bufferIndex">The index where buffer is to begin the write operation.</param>
    <param name="length">The number of bytes to read. </param>
    <returns>The actual number of bytes read.</returns>
    <remarks>
	<para>
	<b>GetBytes</b> returns the number of available bytes in the field.
	In most cases this is the exact length of the field. However, the
	number returned may be less than the true length of the field if 
	<b>GetBytes</b> has already been used to obtain bytes from the field. 
	This may be the case, for example, if the <see cref="FbDataReader">FbDataReader</see> 
	is reading a large data structure into a buffer. For more information, 
	see the <b>SequentialAccess</b> setting for <b>CommandBehavior</b>.
	</para>
	<para>
	If you pass a buffer that is a null reference, <b>GetBytes</b> returns 
	the length of the field in bytes.
	</para>
	<para>
	No conversions are performed, therefore the data retrieved must already 
	be a byte array.
	</para>    
    </remarks>
</member>
<member name="M:GetChar(System.Int32)">
    <summary>
    Gets the value of the specified column as a character.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a character.</returns>
</member>
<member name="M:GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <summary>
    Reads a stream of characters from the specified column offset into the 
    buffer as an array, starting at the given buffer offset.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <param name="dataIndex">The index within the field where the read operation is to begin.</param>
    <param name="buffer">The buffer into which to read the stream of bytes.</param>
    <param name="bufferIndex">The index where buffer is to begin the write operation.</param>
    <param name="length">The number of bytes to read. </param>
    <returns>The actual number of characters read.</returns>		
    <remarks>
	<para>
	<b>GetChars</b> returns the number of available characters in the field.
	In most cases this is the exact length of the field. However, the
	number returned may be less than the true length of the field if 
	<b>GetChars</b> has already been used to obtain characters from the field. 
	This may be the case, for example, if the <see cref="FbDataReader">FbDataReader</see> 
	is reading a large data structure into a buffer. For more information, 
	see the <b>SequentialAccess</b> setting for <b>CommandBehavior</b>.
	</para>
	<para>
	If you pass a buffer that is a null reference, <b>GetBytes</b> returns 
	the length of the field in characters.
	</para>
	<para>
	No conversions are performed, therefore the data retrieved must already 
	be a character array.
	</para>    
    </remarks>
</member>
<member name="M:GetGuid(System.Int32)">
    <summary>
    Gets the value of the specified column as a globally-unique identifier (GUID).
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a GUID.</returns>		
</member>
<member name="M:GetInt16(System.Int32)">
    <summary>
    Gets the value of the specified column as a 16-bit signed integer.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a 16-bit signed integer.</returns>
</member>
<member name="M:GetInt32(System.Int32)">
    <summary>
    Gets the value of the specified column as a 32-bit signed integer.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a 32-bit signed integer.</returns>		
</member>
<member name="M:GetInt64(System.Int32)">
    <summary>
    Gets the value of the specified column as a 64-bit signed integer.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a 64-bit signed integer.</returns>		
</member>
<member name="M:GetFloat(System.Int32)">
    <summary>
    Gets the value of the specified column as a single-precision 
    floating-point number.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a single-precision floating-point number.</returns>		
</member>
<member name="M:GetDouble(System.Int32)">
    <summary>
    Gets the value of the specified column as a double-precision floating point 
    number.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a double-precision floating point number.</returns>
</member>
<member name="M:GetString(System.Int32)">
    <summary>
    Gets the value of the specified column as a string.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a string.</returns>
</member>
<member name="M:GetDecimal(System.Int32)">
    <summary>
    Gets the value of the specified column as a Decimal object.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a Decimal object.</returns>
</member>
<member name="M:GetDateTime(System.Int32)">
    <summary>
    Gets the value of the specified column as a DateTime object.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns>The value of the specified column as a DateTime object.</returns>
</member>
<member name="M:GetData(System.Int32)">
    <summary>
    Not currently supported.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns></returns>
</member>
<member name="M:IsDBNull(System.Int32)">
    <summary>
    Gets a value indicating whether the column contains non-existent or 
    missing values.
    </summary>
    <param name="i">The zero-based column ordinal. </param>
    <returns><b>true</b> if the specified column value is equivalent to DBNull; otherwise, <b>false</b>.</returns>
</member>
<member name="M:getClobData(System.Int64)">
    <summary>
    Get data from a ASCII blob field
    </summary>
    <param name="clob_id">Blob id</param>
    <returns>The blob data</returns>
</member>
<member name="M:getBlobData(System.Int64)">
    <summary>
    Get data from a binary blob field
    </summary>
    <param name="blob_id">Blob id</param>
    <returns>The blob data</returns>
</member>
<member name="M:GetArrayData(System.Int32)">
    <summary>
    Get data from a array field
    </summary>
    <param name="i">The zero-based column ordinal. </param>    
    <returns>The array data</returns>
</member>
<member name="M:AllowDBNull(System.Int32)">
    <summary>
    Gets a value indicating whether the column allow DBNull value.
    </summary>
	<param name="i">The zero-based column ordinal. </param>
    <returns><b>true</b> if column allows DBNull value or <b>false</b> if not</returns>
</member>
<member name="M:IsAliased(System.Int32)">
    <summary>
    Gets a value indicating whether the column name is an alias.
    </summary>
	<param name="i">The zero-based column ordinal. </param>
    <returns><b>true</b> if column name is an alias or <b>false</b> if not</returns>
</member>
<member name="M:IsExpression(System.Int32)">
    <summary>
    Gets a value indicating whether the column is an expresion.
    </summary>
	<param name="i">The zero-based column ordinal. </param>
    <returns><b>true</b> if column is an expression or <b>false</b> if not</returns>
</member>
<member name="M:GetEnumerator">
    <summary>
    This member supports the .NET Framework infrastructure and is not intended to be 
	used directly from your code.
    </summary>
    <returns>An <b>IEnumerator</b> that can be used to iterate through the collection.</returns>
</member><member name="P:FieldCount">
    <summary>
    Gets the number of columns in the current row.
    </summary>
</member>
</doc>
